<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd    
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd    
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 引入dbconfig.properties属性文件 -->
	<context:property-placeholder location="classpath:mysql.properties" />

	<!-- 采用注解的方式配置bean -->
	<context:annotation-config />

	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="pers.husen.highdsa.service.mybatis" />

	<!-- 数据源配置, 使用 Druid 数据库连接池 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="0" />
		<property name="minIdle" value="0" />
		<property name="maxActive" value="20" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用。获取链接的时候，不校验是否可用，开启会有损性能 -->
		<property name="testOnBorrow" value="true" />
		<!-- 归还链接到连接池的时候校验链接是否可用 -->
		<property name="testOnReturn" value="false" />
		<!-- 此项配置为true即可，不影响性能，并且保证安全性。意义为：申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效 -->
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 链接使用超过时间限制是否回收 -->
		<property name="removeAbandoned" value="true" />
		<!-- 超过时间限制时间（单位秒），目前为5分钟，如果有业务处理时间超过5分钟，可以适当调整。 -->
		<property name="removeAbandonedTimeout" value="300" />
		<!-- #链接回收的时候控制台打印信息，测试环境可以加上true，线上环境false。会影响性能。 -->
		<property name="logAbandoned" value="true" />
		<!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
		<property name="validationQuery" value="select 1 " />
		<!-- 配置监控统计拦截的filters，用于在界面中统计sql和开启druid防火墙。注意： -->
		<!-- 监控中有jdbcSqlStat，原因是：com.alibaba.druid.statJdbcDataSourceStat中的createSqlStat方法中， 用了一个map来存放所有的sql语句，这样会导致线上触发FullGC，可将此处注释掉 -->
		<property name="filters" value="wall,stat,log4j2" />
		<!-- 映射慢sql -->
		<property name="proxyFilters">
			<list>
				<ref bean="statfilter" />
				<ref bean="logFilter" />
			</list>
		</property>
	</bean>

	<!-- 慢SQL记录 -->
	<bean id="statfilter" class="com.alibaba.druid.filter.stat.StatFilter">
		<!-- 开启合并sql -->
		<property name="mergeSql" value="true" />
		<!-- 开启慢查询语句,200毫秒 -->
		<property name="slowSqlMillis" value="200" />
		<property name="logSlowSql" value="true" />
	</bean>

	<!-- 日志过滤器 -->
	<bean id="logFilter" class="com.alibaba.druid.filter.logging.Log4j2Filter">
		<property name="connectionLogEnabled" value="false" />
		<property name="statementLogEnabled" value="false" />
		<property name="resultSetLogEnabled" value="false" />
		<property name="statementExecutableSqlLogEnable" value="false" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- dataSource bean -->
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mappers/**/*.xml" />
		<property name="typeAliasesPackage" value="pers.husen.highdsa.common.entity.po" />
		<!-- 可以单独指定mybatis的配置文件，或者写在本文件里面。 用下面的自动扫描装配(推荐)或者单独mapper -->
		<property name="configLocation" value="classpath:mybatis/mybatis-spring-config.xml" />
	</bean>

	<!-- 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 -->
	<bean id="redisCacheTransfer" class="pers.husen.highdsa.service.mybatis.cache.RedisCacheTransfer">
		<property name="redisOperation" ref="redisOperation" />
	</bean>

	<!-- 定义mapper类bean -->
	<bean id="sysUserInfoMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="pers.husen.highdsa.service.mybatis.dao.system.SysUserInfoMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="sysPermissionMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="pers.husen.highdsa.service.mybatis.dao.system.SysPermissionMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="sysRoleMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="pers.husen.highdsa.service.mybatis.dao.system.SysRoleMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="sysRolePermissionMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="pers.husen.highdsa.service.mybatis.dao.system.SysRolePermissionMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="sysUserMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="pers.husen.highdsa.service.mybatis.dao.system.SysUserMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="sysUserRoleMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="pers.husen.highdsa.service.mybatis.dao.system.SysUserRoleMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<!-- <import resource="mybatis-provider.xml" /> <import resource="redis-consumer.xml" /> -->
</beans> 