<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 地址配置 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:shiro/url.properties</value>
			</list>
		</property>
	</bean>

	<!-- pac4j configurations -->

	<!-- 请求cas服务端配置 -->
	<bean id="casConfig" class="org.pac4j.cas.config.CasConfiguration">
		<!-- CAS server登录链接 -->
		<property name="loginUrl" value="${sso.cas.server.loginUrl}"></property>
		<!-- CAS server服务前缀 -->
		<property name="prefixUrl" value="${sso.cas.server.prefixUrl}"></property>
		<!-- 登出处理器，单点登出时所需要的操作在这里实现 -->
		<property name="logoutHandler" ref="casLogoutHandler"></property>
	</bean>

	<!-- cas客户端配置 -->
	<bean id="casClient" class="pers.husen.highdsa.security.client.pac4j.MyCasClient">
		<constructor-arg ref="casConfig" />
		<property name="includeClientNameInCallbackUrl" value="false"></property>
		<!-- 客户端回调地址 -->
		<property name="callbackUrl" value="${sso.cas.client.callbackUrl}"></property>
	</bean>

	<!-- shiro登出处理器，销毁session及登录状态等 -->
	<bean id="casLogoutHandler" class="pers.husen.highdsa.security.client.pac4j.handler.ShiroCasLogoutHandler">
		<property name="destroySession" value="true"></property>
	</bean>

	<bean id="sessionStore" class="pers.husen.highdsa.security.client.pac4j.session.ShiroSessionStore"></bean>

	<!-- pac4j配置 -->
	<bean id="authcConfig" class="org.pac4j.core.config.Config">
		<constructor-arg ref="casClient"></constructor-arg>
		<property name="sessionStore" ref="sessionStore"></property>
	</bean>

	<!-- shiro configurations -->

	<!-- 缓存管理器 使用redis实现 -->
	<bean id="cacheManager" class="pers.husen.highdsa.security.client.pac4j.cache.ShiroRedisCacheManager"></bean>

	<bean id="sessionIdGenerator" class="pers.husen.highdsa.common.sequence.SequenceSessionIdGenerator" />

	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="highdsa-system-session-id" />
		<property name="httpOnly" value="false" />
		<property name="maxAge" value="2592000" />
		<property name="path" value="/" />
		<property name="domain" value="" />
	</bean>

	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="highdsa-system-rememberMe-cookie" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
		<property name="domain" value="" />
		<property name="path" value="/" />
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 会话 DAO -->
	<bean id="sessionDAO" class="pers.husen.highdsa.security.client.pac4j.session.MysqlSessionDao">
		<constructor-arg name="sysSessionsManager" ref="sysSessionsManager" />
		<property name="activeSessionsCacheName" value="shiro_redis_session_system:" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="pers.husen.highdsa.security.client.pac4j.session.MysqlSessionValidationScheduler">
		<property name="sysSessionsManager" ref="sysSessionsManager" />
		<property name="interval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 基于pac4j的Subject工厂 -->
	<bean id="pac4jSubjectFactory" class="io.buji.pac4j.subject.Pac4jSubjectFactory"></bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="userRealm" />
			</list>
		</property>
		<property name="subjectFactory" ref="pac4jSubjectFactory"></property>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userRealm" class="pers.husen.highdsa.security.client.pac4j.realm.UserRealm">
		<property name="sysUserManager" ref="sysUserManager" />
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<bean id="shiroFilter" class="pers.husen.highdsa.security.client.pac4j.filter.ClientShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="filters">
			<util:map>
				<!-- 配置SecurityFilter，用于拦截受保护的url -->
				<entry key="casSecurityFilter">
					<bean class="io.buji.pac4j.filter.SecurityFilter">
						<property name="config" ref="authcConfig"></property>
						<property name="clients" value="MyCasClient"></property>
					</bean>
				</entry>
				<!-- 回调过滤器，完成ticket认证 -->
				<entry key="callback">
					<bean class="io.buji.pac4j.filter.CallbackFilter">
						<property name="config" ref="authcConfig"></property>
						<property name="defaultUrl" value="${sso.cas.client.successUrl}"></property>
					</bean>
				</entry>
				<!-- 登出过滤器 -->
				<entry key="logout">
					<bean id="logout" class="io.buji.pac4j.filter.LogoutFilter">
						<property name="defaultUrl" value="${sso.cas.client.callbackUrl}"></property>
						<property name="config" ref="authcConfig"></property>
						<property name="centralLogout" value="true"></property>
						<property name="localLogout" value="true"></property>
					</bean>
				</entry>
				<!-- 拦截/login,并作一些操作，测试用，可以忽略 -->
				<entry key="login">
					<bean class="pers.husen.highdsa.security.client.pac4j.filter.Redirect2CasLoginFilter"></bean>
				</entry>

			</util:map>
		</property>
		<property name="filterChainDefinitionsLocation">
			<value>classpath:shiro/shiro-urls.ini</value>
		</property>
	</bean>

	<!-- 生命周期处理 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="annotationProxy" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<!-- 启用Spring Shiro注解 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使shiro实现第三方缓存 -->
	<bean id="shiroRedisCacheTransfer" class="pers.husen.highdsa.security.client.pac4j.cache.ShiroRedisCacheTransfer">
		<constructor-arg name="redisOperation" ref="redisOperation" />
	</bean>
</beans>